//
// ChannelOrderRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct ChannelOrderRequest: Codable {

    /** The billing or invoice address */
    public var billingAddress: ChannelAddressRequest
    /** The shipping address */
    public var shippingAddress: ChannelAddressRequest
    /** The unique order reference used by the Channel */
    public var channelOrderNo: String
    /** Optional. Is a business order (default value is false).  If not provided the VAT Number will be checked. If a VAT Number is found, IsBusinessOrder will be set to true.  No VAT will be calculated when set to true. */
    public var isBusinessOrder: Bool?
    /** The order lines */
    public var lines: [ChannelOrderLineRequest]
    /** The customer&#39;s telephone number */
    public var phone: String?
    /** The customer&#39;s email */
    public var email: String
    /** Optional. A company&#39;s chamber of commerce number */
    public var companyRegistrationNo: String?
    /** Optional. A company&#39;s VAT number */
    public var vatNo: String?
    /** The payment method used on the order */
    public var paymentMethod: String?
    /** The shipping fee including VAT  (in the shop&#39;s base currency calculated using the exchange rate at the time of ordering). */
    public var shippingCostsInclVat: Double
    /** The currency code for the amounts of the order */
    public var currencyCode: String
    /** The date the order was done */
    public var orderDate: Date
    /** The unique customer reference used by the channel */
    public var channelCustomerNo: String?
    /** Extra data on the order */
    public var extraData: [String:String]?

    public init(billingAddress: ChannelAddressRequest, shippingAddress: ChannelAddressRequest, channelOrderNo: String, isBusinessOrder: Bool?, lines: [ChannelOrderLineRequest], phone: String?, email: String, companyRegistrationNo: String?, vatNo: String?, paymentMethod: String?, shippingCostsInclVat: Double, currencyCode: String, orderDate: Date, channelCustomerNo: String?, extraData: [String:String]?) {
        self.billingAddress = billingAddress
        self.shippingAddress = shippingAddress
        self.channelOrderNo = channelOrderNo
        self.isBusinessOrder = isBusinessOrder
        self.lines = lines
        self.phone = phone
        self.email = email
        self.companyRegistrationNo = companyRegistrationNo
        self.vatNo = vatNo
        self.paymentMethod = paymentMethod
        self.shippingCostsInclVat = shippingCostsInclVat
        self.currencyCode = currencyCode
        self.orderDate = orderDate
        self.channelCustomerNo = channelCustomerNo
        self.extraData = extraData
    }

    public enum CodingKeys: String, CodingKey { 
        case billingAddress = "BillingAddress"
        case shippingAddress = "ShippingAddress"
        case channelOrderNo = "ChannelOrderNo"
        case isBusinessOrder = "IsBusinessOrder"
        case lines = "Lines"
        case phone = "Phone"
        case email = "Email"
        case companyRegistrationNo = "CompanyRegistrationNo"
        case vatNo = "VatNo"
        case paymentMethod = "PaymentMethod"
        case shippingCostsInclVat = "ShippingCostsInclVat"
        case currencyCode = "CurrencyCode"
        case orderDate = "OrderDate"
        case channelCustomerNo = "ChannelCustomerNo"
        case extraData = "ExtraData"
    }


}

